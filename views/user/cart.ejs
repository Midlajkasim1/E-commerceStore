<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Shopping Cart</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    /* Breadcrumb styles */
    .breadcrumb a {
      color: #088178;
      text-decoration: none;
    }

    .breadcrumb span {
      margin: 0 10px;
      color: #666;
    }

    /* Cart Banner */
    .cart-banner {
      background: linear-gradient(rgba(17, 18, 18, 0.9), rgba(8, 129, 120, 0.8)), 
                  url('/api/placeholder/1200/300') center/cover;
      padding: 60px 0;
      margin-bottom: 40px;
      position: relative;
    }

    .banner-content {
      text-align: center;
      color: #ffffff;
    }

    .banner-content h1 {
      font-size: 42px;
      font-weight: 700;
      margin-bottom: 15px;
      text-transform: uppercase;
      letter-spacing: 1px;
    }

    /* Cart Item Styles */
    .cart-item {
      background: #ffffff;
      border-radius: 12px;
      padding: 20px;
      margin-bottom: 20px;
      box-shadow: 0 2px 15px rgba(0, 0, 0, 0.08);
      transition: all 0.3s ease;
    }

    .cart-item:hover {
      transform: translateY(-5px);
    }

    .cart-item img {
      width: 100px;
      height: 100px;
      object-fit: cover;
      border-radius: 8px;
    }

    .item-details h5 {
      color: #2c3e50;
      margin-bottom: 10px;
    }

    .quantity-control {
      display: flex;
      align-items: center;
      gap: 10px;
    }

    .quantity-btn {
      background-color: #f1f1f1;
      border: none;
      padding: 5px 12px;
      border-radius: 5px;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .quantity-btn:hover {
      background-color: #088178;
      color: white;
    }

    .remove-btn {
      color: #dc3545;
      border: none;
      background: none;
      padding: 5px;
      transition: all 0.3s ease;
    }

    .remove-btn:hover {
      color: #bb2d3b;
      transform: scale(1.1);
    }

    /* Cart Summary Styles */
    .cart-summary {
      background: #ffffff;
      border-radius: 12px;
      padding: 25px;
      box-shadow: 0 2px 15px rgba(0, 0, 0, 0.08);
      position: sticky;
      top: 20px;
    }

    .summary-item {
      display: flex;
      justify-content: space-between;
      margin-bottom: 15px;
      padding-bottom: 15px;
      border-bottom: 1px solid #e9ecef;
    }

    .total {
      font-size: 1.2em;
      font-weight: bold;
      color: #088178;
    }

    .checkout-btn {
      background-color: #088178;
      color: white;
      border: none;
      border-radius: 8px;
      padding: 15px 30px;
      width: 100%;
      font-weight: 500;
      transition: all 0.3s ease;
    }

    .checkout-btn:hover {
      background-color: #066661;
      transform: translateY(-2px);
    }

    .continue-shopping {
      display: inline-block;
      color: #088178;
      text-decoration: none;
      margin-top: 15px;
      transition: all 0.3s ease;
    }

    .continue-shopping:hover {
      color: #066661;
      transform: translateX(-5px);
    }

    .continue-shopping i {
      margin-right: 5px;
    }


    /* footer {
  width: 100% !important;
  min-width: 100% !important;
  margin: 0 !important;
  padding: 0 !important;
  box-sizing: border-box;
  overflow-x: hidden;
}

footer .container-fluid {
  max-width: 1400px;
  margin: 0 auto;
}

footer a {
  color: #088178;
  text-decoration: none;
  transition: color 0.3s ease;
}

footer a:hover {
  color: #066661;
}

footer h5 {
  margin-bottom: 1.2rem;
  color: #2c3e50;
}

footer .list-unstyled li {
  margin-bottom: 0.5rem;
}

footer .input-group {
  max-width: 300px;
} */

@media (max-width: 768px) {
  footer .col-md-3 {
    text-align: center;
  }
  
  footer .input-group {
    margin: 0 auto;
  }
}



    @media (max-width: 768px) {
      .cart-banner {
        padding: 40px 0;
      }
      
      .banner-content h1 {
        font-size: 32px;
      }
      
      .cart-item {
        text-align: center;
      }
      
      .cart-item img {
        margin-bottom: 15px;
      }
      
      .quantity-control {
        justify-content: center;
        margin: 15px 0;
      }
      
      .footer-content {
            padding: 0 10px;
        }
    }
    
  </style>
</head>
<body>
  <%-include("../../views/partials/user/header")%>

  <div class="container my-4">
    <!-- Breadcrumb -->
    <div class="breadcrumb">
      <a href="/">Home</a>
      <span>/</span>
      <a href="/cart">Shopping Cart</a>
    </div>

    <!-- Cart Banner -->
    <div class="cart-banner">
      <div class="container">
        <div class="banner-content">
          <h1>Your Shopping Cart</h1>
        </div>
      </div>
    </div>

  <!-- <% if (messages) { %>
  <% if (messages.error) { %>
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
      <%= messages.error %>
      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
  <% } %>
  
  <% if (messages.warning) { %>
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
      <%= messages.warning %>
      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
  <% } %>
  
  <% if (messages.success) { %>
    <div class="alert alert-success alert-dismissible fade show" role="alert">
      <%= messages.success %>
      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
  <% } %>
<% } %> -->

    <div class="row">
      <!-- Cart Items -->
     <!-- Cart Items -->
  <div class="col-lg-8">
    <% if (cart && cart.length > 0) { %>
      <% cart.forEach(item => { %>
        <div class="cart-item" data-product-id="<%= item.productId %>">
          <div class="row align-items-center">
            <div class="col-md-2 col-12 mb-md-0 mb-3">
              <!-- Check if productImage exists and use the correct image path -->
              <img src="/uploads/re-image/<%= item.productImage[0] %>" alt="<%= item.productName %>" class="img-fluid">
            </div>
            <div class="col-md-4 col-12 item-details">
              <h5><%= item.productName %></h5>
              <p class="text-muted mb-0">Size: <%= item.size %></p>
            </div>
            <div class="col-md-3 col-12">
              <div class="quantity-control">
                <form action="/cart/update-quantity" method="POST" class="d-flex align-items-center gap-2">
                  <input type="hidden" name="productId" value="<%= item.productId %>">
                  <input type="hidden" name="size" value="<%= item.size %>">
                  <button type="submit" name="action" value="decrease" class="quantity-btn">-</button>
                  <span class="quantity-value"><%= item.quantity %></span>
                  <button type="submit" name="action" value="increase" class="quantity-btn">+</button>
              </form>
              
            </div>
            </div>
            <div class="col-md-2 col-12 text-md-end text-center">
              <p class="mb-0">₹<%= item.totalPrice %></p>
            </div>
            <div class="col-md-1 col-12 text-md-end text-center">
              <form action="/cart/remove" method="POST" class="d-inline">
                <input type="hidden" name="productId" value="<%= item.productId %>">
                <input type="hidden" name="size" value="<%= item.size %>">
                <button type="submit" class="remove-btn">
                    <i class="bi bi-trash"></i>
                </button>
            </form>
            </div>
          </div>
        </div>
      <% }); %>
    <% } else { %>
      <div class="text-center py-5">
        <h4>Your cart is empty</h4>
        <p>Looks like you haven't added anything to your cart yet.</p>
        <a href="/shop" class="continue-shopping">
          <i class="bi bi-arrow-left"></i> Continue Shopping
        </a>
      </div>
    <% } %>
  </div>

      <!-- Cart Summary -->
  <!-- Cart Summary -->
<div class="col-lg-4">
    <div class="cart-summary">
      <h4 class="mb-4">Order Summary</h4>
      <div class="summary-item">
        <span>Subtotal</span>
        <span>₹<%= (cart && cart.length > 0) ? cart.reduce((total, item) => total + (Number(item.salePrice) * Number(item.quantity) || 0), 0) : 0 %></span>
      </div>
      <div class="summary-item">
        <span>Shipping</span>
        <span>₹<%= (cart && cart.length > 0) ? 100 : 0 %></span>
      </div>
      <div class="summary-item">
        <span>Tax</span>
        <span>₹<%= (cart && cart.length > 0) ? 20 : 0 %></span>
      </div>
      <div class="summary-item total">
        <span>Total</span>
        <span>₹<%= (cart && cart.length > 0) ? 
          cart.reduce((total, item) => total + (Number(item.salePrice) * Number(item.quantity) || 0), 0) + 100 + 20 
          : 0 
        %></span>
      </div>
      <% if (cart && cart.length > 0) { %>
        <button class="checkout-btn" onclick="window.location.href='/checkout'">Checkout</button>
      <% } %>
      <div class="text-center mt-3">
        <a href="/shop" class="continue-shopping">
          <i class="bi bi-arrow-left"></i> Continue Shopping
        </a>
      </div>
    </div>
  </div>
  </div>
  </div>

  <%-include("../../views/partials/user/footer")%>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">

  <script>

function formatPrice(price) {
    return '₹' + parseFloat(price).toFixed(2);
}

// Function to update cart summary totals
function updateCartSummary(subtotal) {
    const shipping = 100;
    const tax = 20;
    const total = subtotal + shipping + tax;

    // Update subtotal
    document.querySelector('.summary-item:nth-child(1) span:last-child').textContent = `₹${subtotal.toFixed(2)}`;
    // Update total
    document.querySelector('.total span:last-child').textContent = `₹${total.toFixed(2)}`;
}

// Function to update quantity
// Function to update quantity
async function updateQuantity(productId, action, size) {
    try {
        const response = await fetch('/cart/update-quantity', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            body: `productId=${productId}&action=${action}&size=${size}`
        });

        // Simple page reload will handle flash messages
        window.location.reload();
    } catch (error) {
        // Fallback error handling
        showCustomNotification('Network error', 'error');
    }
}

// Modify the form submission to use the new function
document.querySelectorAll('.quantity-control form').forEach(form => {
    form.addEventListener('submit', function(e) {
        e.preventDefault();
        const productId = this.querySelector('input[name="productId"]').value;
        const size = this.querySelector('input[name="size"]').value;
        const action = e.submitter.value;
        
        updateQuantity(productId, action, size);
    });
});

// Modify the form submission to use the new function
document.querySelectorAll('.quantity-control form').forEach(form => {
    form.addEventListener('submit', function(e) {
        e.preventDefault();
        const productId = this.querySelector('input[name="productId"]').value;
        const size = this.querySelector('input[name="size"]').value;
        const action = e.submitter.value;
        
        updateQuantity(productId, action, size);
    });
});
// Function to remove item
async function removeItem(productId) {
    try {
        const response = await fetch('/cart/remove', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ productId })
        });

        const data = await response.json();

        if (data.success) {
            // Remove item from DOM
            const cartItem = document.querySelector(`.cart-item [onclick*="${productId}"]`).closest('.cart-item');
            if (cartItem) {
                cartItem.remove();
            }

            // Update cart summary
            updateCartSummary(data.total);

            // Check if cart is empty
            checkEmptyCart();

            showNotification('Item removed from cart', 'success');
        } else {
            showNotification(data.message, 'error');
        }
    } catch (error) {
        console.error('Error:', error);
        showNotification('Error removing item', 'error');
    }
}

// Function to check if cart is empty
function checkEmptyCart() {
    const cartItems = document.querySelectorAll('.cart-item');
    if (cartItems.length === 0) {
        const cartContainer = document.querySelector('.col-lg-8');
        if (cartContainer) {
            cartContainer.innerHTML = `
                <div class="text-center py-5">
                    <h4>Your cart is empty</h4>
                    <p>Looks like you haven't added anything to your cart yet.</p>
                    <a href="/shop" class="continue-shopping">
                        <i class="bi bi-arrow-left"></i> Continue Shopping
                    </a>
                </div>
            `;
        }
        updateCartSummary(0);
    }
}

// Function to show notifications
function showCustomNotification(message, variant = 'success') {
    const notification = document.createElement('div');
    
    const colors = {
        success: '#088178',
        error: '#dc3545',
        warning: '#ffc107'
    };

    const textColors = {
        success: 'white',
        error: 'white',
        warning: 'black'
    };

    notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background-color: ${colors[variant]};
        color: ${textColors[variant]};
        padding: 15px 20px;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        z-index: 1000;
        animation: slideIn 0.5s ease-out;
    `;
    notification.textContent = message;

    document.body.appendChild(notification);

    setTimeout(() => {
        notification.style.animation = 'slideOut 0.5s ease-in';
        setTimeout(() => notification.remove(), 500);
    }, 3000);
}
  </script>
</body>
</html>
