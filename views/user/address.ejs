<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>My Addresses</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    /* Previous styles remain the same */
    .breadcrumb a {
      color: #088178;
      text-decoration: none;
    }

    .breadcrumb span {
      margin: 0 10px;
      color: #666;
    }

    .sidebar {
      position: sticky;
      top: 20px;
    }

    .nav-link {
      color: #2c3e50;
      padding: 12px 20px;
      border-radius: 8px;
      margin-bottom: 5px;
      transition: all 0.3s ease;
    }

    .nav-link:hover {
      background-color: #f8f9fa;
      color: #088178;
      padding-left: 25px;
    }

    .nav-link.active {
      background-color: #edf7f7;
      color: #088178;
    }

    .nav-link i {
      margin-right: 10px;
    }

    .address-card {
      background: #ffffff;
      border-radius: 12px;
      box-shadow: 0 2px 15px rgba(0, 0, 0, 0.08);
      padding: 30px;
      margin-bottom: 30px;
    }

    .saved-address {
      border: 1px solid #e9ecef;
      border-radius: 8px;
      padding: 20px;
      margin-bottom: 20px;
      position: relative;
    }

    .address-type {
      display: inline-block;
      padding: 4px 12px;
      border-radius: 4px;
      font-size: 12px;
      font-weight: 500;
      margin-bottom: 10px;
    }

    .address-type.home {
      background-color: #e8f5e9;
      color: #2e7d32;
    }

    .address-type.work {
      background-color: #e3f2fd;
      color: #1976d2;
    }

    .address-type.other {
      background-color: #f3e5f5;
      color: #7b1fa2;
    }

    .address-actions {
      position: absolute;
      right: 20px;
      top: 20px;
    }

    .address-actions button {
      background: none;
      border: none;
      color: #6c757d;
      margin-left: 10px;
      padding: 5px;
    }

    .address-actions button:hover {
      color: #088178;
    }

    .add-address-btn {
      background-color: #088178;
      color: white;
      border: none;
      border-radius: 8px;
      padding: 12px 30px;
      font-weight: 500;
      transition: all 0.3s ease;
    }

    .add-address-btn:hover {
      background-color: #066c65;
    }

    .form-control {
      padding: 12px;
      border-radius: 8px;
      border: 1px solid #e9ecef;
    }

    .form-control:focus {
      border-color: #088178;
      box-shadow: 0 0 0 0.2rem rgba(8, 129, 120, 0.25);
    }

    @media (max-width: 991px) {
      .sidebar {
        position: static;
        margin-bottom: 30px;
      }
    }
      /* Your existing styles */
      .validation-error {
      color: #dc3545;
      font-size: 0.875em;
      margin-top: 0.25rem;
    }
  </style>
</head>
<body>
  <%-include("../../views/partials/user/header")%>


  <div class="container my-4">
    <% if (message && message.length > 0) { %>
      <div class="alert alert-<%= message.includes('success') ? 'danger' : 'success' %> alert-dismissible fade show" role="alert">
        <%= message %>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
      </div>
    <% } %>

    <div class="breadcrumb">
      <a href="/">Home</a>
      <span>/</span>
      <a href="/addresses">My Addresses</a>
    </div>

    <div class="row mt-4">
      <%-include("../../views/partials/user/profileSidebar")%>

      <div class="col-lg-9">
        <div class="address-card">
          <div class="d-flex justify-content-between align-items-center mb-4">
            <h4 class="mb-0">My Addresses</h4>
            <button class="add-address-btn" data-bs-toggle="modal" data-bs-target="#addAddressModal">
              <i class="bi bi-plus"></i> Add New Address
            </button>
          </div>

          <%if(userAddress?.address?.length > 0){%>
            <%userAddress.address.forEach((address)=>{%>
              <div class="saved-address">
                <span class="address-type <%=address.addressType.toLowerCase()%>">
                  <%=address.addressType%>
                </span>
                <div class="address-actions">
                  <button onclick="handleEditClick('<%=address._id%>', '<%=address.addressType%>', '<%=address.name%>', '<%=address.phone%>', '<%=address.altPhone%>', '<%=address.landMark%>', '<%=address.city%>', '<%=address.state%>', '<%=address.pincode%>')" class="btn btn-link p-0 border-0">
                    <i class="bi bi-pencil"></i>
                  </button>
                  <a href="/deleteAddress?id=<%=address._id%>" class="btn btn-link p-0 border-0" >
                    <i class="bi bi-trash"></i>
                  </a>
                </div>
                <h6><%=address.name%></h6>
                <p class="mb-2">
                  <%=address.city%><br>
                  <%=address.landMark%><br>
                  <%=address.state%><br>
                  <%=address.pincode%>
                </p>
                <p class="mb-1"><%=address.phone%></p>
                <p class="mb-0"><%=address.altPhone%></p>
              </div>
            <%})%>
          <%}else{%>
            <div class="text-center py-5">
              <i class="bi bi-geo-alt text-muted" style="font-size: 3rem;"></i>
              <h5 class="mt-3 text-muted">No Addresses Found</h5>
              <p class="text-muted mb-4">You haven't added any addresses yet.</p>
            </div>
          <%}%>
        </div>
      </div>
    </div>
  </div>

  <!-- Add Address Modal -->
  <div class="modal fade" id="addAddressModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Add New Address</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body">
          <form id="addressForm" action="/addAddress" method="post" novalidate>
            <div class="row g-3">
              <div class="col-12">
                <label class="form-label">Address Type *</label>
                <select class="form-select" name="addressType" required>
                  <option value="">Select Address Type</option>
                  <option value="home">Home</option>
                  <option value="work">Work</option>
                  <option value="other">Other</option>
                </select>
                <div class="validation-error" id="addressTypeError"></div>
              </div>

              <div class="col-12">
                <label class="form-label">Full Name *</label>
                <input type="text" class="form-control" name="name" required>
                <div class="validation-error" id="nameError"></div>
              </div>

              <div class="col-md-6">
                <label class="form-label">Phone Number *</label>
                <input type="tel" class="form-control" name="phone" required pattern="\d{10}" title="Phone number must be 10 digits" maxlength="10">
                <div class="validation-error" id="phoneError"></div>
              </div>

              <div class="col-md-6">
                <label class="form-label">Alternate Phone Number</label>
                <input type="tel" class="form-control" name="altPhone" pattern="\d{10}" title="Alternate phone number must be 10 digits" maxlength="10">
                <div class="validation-error" id="altPhoneError"></div>
              </div>

              <div class="col-12">
                <label class="form-label">Landmark *</label>
                <input type="text" class="form-control" name="landMark" required>
                <div class="validation-error" id="landMarkError"></div>
              </div>

              <div class="col-md-4">
                <label class="form-label">City *</label>
                <input type="text" class="form-control" name="city" required>
                <div class="validation-error" id="cityError"></div>
              </div>

              <div class="col-md-4">
                <label class="form-label">State *</label>
                <input type="text" class="form-control" name="state" required>
                <div class="validation-error" id="stateError"></div>
              </div>

              <div class="col-md-4">
                <label class="form-label">PIN Code *</label>
                <input type="text" class="form-control" name="pincode" required pattern="\d{6}" title="PIN code must be 6 digits" maxlength="6">
                <div class="validation-error" id="pincodeError"></div>
              </div>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="submit" form="addressForm" class="btn add-address-btn">Save Address</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Edit Address Modal -->
  <div class="modal fade" id="editAddressModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Edit Address</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body">
          <form id="editAddressForm" action="/editAddress" method="post" novalidate>
            <input type="hidden" name="addressId" id="editAddressId">
            <div class="row g-3">
              <div class="col-12">
                <label class="form-label">Address Type *</label>
                <select class="form-select" name="addressType" id="editAddressType" required>
                  <option value="">Select Address Type</option>
                  <option value="home">Home</option>
                  <option value="work">Work</option>
                  <option value="other">Other</option>
                </select>
                <div class="validation-error" id="editAddressTypeError"></div>
              </div>

              <div class="col-12">
                <label class="form-label">Full Name *</label>
                <input type="text" class="form-control" name="name" id="editName" required>
                <div class="validation-error" id="editNameError"></div>
              </div>

              <div class="col-md-6">
                <label class="form-label">Phone Number *</label>
                <input type="tel" class="form-control" name="phone" id="editPhone" required pattern="\d{10}" title="Phone number must be 10 digits" maxlength="10">
                <div class="validation-error" id="editPhoneError"></div>
              </div>

              <div class="col-md-6">
                <label class="form-label">Alternate Phone Number</label>
                <input type="tel" class="form-control" name="altPhone" id="editAltPhone" pattern="\d{10}" title="Alternate phone number must be 10 digits" maxlength="10">
                <div class="validation-error" id="editAltPhoneError"></div>
              </div>

              <div class="col-12">
                <label class="form-label">Landmark *</label>
                <input type="text" class="form-control" name="landMark" id="editLandmark" required>
                <div class="validation-error" id="editLandmarkError"></div>
              </div>

              <div class="col-md-4">
                <label class="form-label">City *</label>
                <input type="text" class="form-control" name="city" id="editCity" required>
                <div class="validation-error" id="editCityError"></div>
              </div>

              <div class="col-md-4">
                <label class="form-label">State *</label>
                <input type="text" class="form-control" name="state" id="editState" required>
                <div class="validation-error" id="editStateError"></div>
              </div>

              <div class="col-md-4">
                <label class="form-label">PIN Code *</label>
                <input type="text" class="form-control" name="pincode" id="editPincode" required pattern="\d{6}" title="PIN code must be 6 digits" maxlength="6">
                <div class="validation-error" id="editPincodeError"></div>
              </div>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="submit" form="editAddressForm" class="btn add-address-btn">Update Address</button>
        </div>
      </div>
    </div>
  </div>

  <%-include("../../views/partials/user/footer")%>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">

  <script>
    // Validation helper functions
function isValidPhone(phone) {
  return /^\d{10}$/.test(phone);
}

function isValidPincode(pincode) {
  return /^\d{6}$/.test(pincode);
}

// Input event listeners for phone numbers to allow only digits
document.querySelectorAll('input[type="tel"]').forEach(input => {
  input.addEventListener('input', function(e) {
    this.value = this.value.replace(/\D/g, '').slice(0, 10);
  });
});

// Input event listeners for pincode to allow only digits
document.querySelectorAll('input[name="pincode"]').forEach(input => {
  input.addEventListener('input', function(e) {
    this.value = this.value.replace(/\D/g, '').slice(0, 6);
  });
});

// Handle add address form submission
document.getElementById('addressForm').addEventListener('submit', async (e) => {
  e.preventDefault();

  // Clear previous validation errors
  document.querySelectorAll('.validation-error').forEach(el => el.textContent = '');

  // Validate form fields
  let isValid = true;
  const formData = new FormData(e.target);
  const addressData = Object.fromEntries(formData.entries());

  // Validate required fields
  if (!addressData.addressType) {
    document.getElementById('addressTypeError').textContent = 'Address Type is required.';
    isValid = false;
  }

  if (!addressData.name) {
    document.getElementById('nameError').textContent = 'Full Name is required.';
    isValid = false;
  }

  // Phone validation
  if (!addressData.phone) {
    document.getElementById('phoneError').textContent = 'Phone Number is required.';
    isValid = false;
  } else if (!isValidPhone(addressData.phone)) {
    document.getElementById('phoneError').textContent = 'Phone Number must be exactly 10 digits.';
    isValid = false;
  }

  // Alternate phone validation (if provided)
  if (addressData.altPhone && !isValidPhone(addressData.altPhone)) {
    document.getElementById('altPhoneError').textContent = 'Alternate Phone Number must be exactly 10 digits.';
    isValid = false;
  }

  if (!addressData.landMark) {
    document.getElementById('landMarkError').textContent = 'Landmark is required.';
    isValid = false;
  }

  if (!addressData.city) {
    document.getElementById('cityError').textContent = 'City is required.';
    isValid = false;
  }

  if (!addressData.state) {
    document.getElementById('stateError').textContent = 'State is required.';
    isValid = false;
  }

  // Pincode validation
  if (!addressData.pincode) {
    document.getElementById('pincodeError').textContent = 'PIN Code is required.';
    isValid = false;
  } else if (!isValidPincode(addressData.pincode)) {
    document.getElementById('pincodeError').textContent = 'PIN Code must be exactly 6 digits.';
    isValid = false;
  }

  if (!isValid) return;

  try {
    const response = await fetch('/addAddress', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(addressData),
    });

    const result = await response.json();

    if (result.success) {
      window.location.reload();
    } else {
      if (result.errors) {
        result.errors.forEach(error => {
          document.getElementById(`${error.field}Error`).textContent = error.message;
        });
      } else if (result.message) {
        alert(result.message);
      }
    }
  } catch (error) {
    console.error('Error:', error);
    // alert('Failed to submit the form. Please try again.');
  }
});

// Handle edit address form submission
document.getElementById('editAddressForm').addEventListener('submit', async (e) => {
  e.preventDefault();

  // Clear previous validation errors
  document.querySelectorAll('.validation-error').forEach(el => el.textContent = '');

  // Validate form fields
  let isValid = true;
  const formData = new FormData(e.target);
  const addressData = Object.fromEntries(formData.entries());

  // Validate required fields
  if (!addressData.addressType) {
    document.getElementById('editAddressTypeError').textContent = 'Address Type is required.';
    isValid = false;
  }

  if (!addressData.name) {
    document.getElementById('editNameError').textContent = 'Full Name is required.';
    isValid = false;
  }

  // Phone validation
  if (!addressData.phone) {
    document.getElementById('editPhoneError').textContent = 'Phone Number is required.';
    isValid = false;
  } else if (!isValidPhone(addressData.phone)) {
    document.getElementById('editPhoneError').textContent = 'Phone Number must be exactly 10 digits.';
    isValid = false;
  }

  // Alternate phone validation (if provided)
  if (addressData.altPhone && !isValidPhone(addressData.altPhone)) {
    document.getElementById('editAltPhoneError').textContent = 'Alternate Phone Number must be exactly 10 digits.';
    isValid = false;
  }

  if (!addressData.landMark) {
    document.getElementById('editLandmarkError').textContent = 'Landmark is required.';
    isValid = false;
  }

  if (!addressData.city) {
    document.getElementById('editCityError').textContent = 'City is required.';
    isValid = false;
  }

  if (!addressData.state) {
    document.getElementById('editStateError').textContent = 'State is required.';
    isValid = false;
  }

  // Pincode validation
  if (!addressData.pincode) {
    document.getElementById('editPincodeError').textContent = 'PIN Code is required.';
    isValid = false;
  } else if (!isValidPincode(addressData.pincode)) {
    document.getElementById('editPincodeError').textContent = 'PIN Code must be exactly 6 digits.';
    isValid = false;
  }

  if (!isValid) return;

  try {
    const response = await fetch('/editAddress', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(addressData),
    });

    const result = await response.json();

    if (result.success) {
      window.location.reload();
    } else {
      if (result.errors) {
        result.errors.forEach(error => {
          document.getElementById(`edit${error.field}Error`).textContent = error.message;
        });
      } else if (result.message) {
        // alert(result.message);
      }
    }
  } catch (error) {
    console.error('Error:', error);
    // alert('Failed to submit the form. Please try again.');
  }
});

// Handle edit button click
function handleEditClick(id, type, name, phone, altPhone, landmark, city, state, pincode) {
  document.getElementById('editAddressId').value = id;
  document.getElementById('editAddressType').value = type.toLowerCase();
  document.getElementById('editName').value = name;
  document.getElementById('editPhone').value = phone;
  document.getElementById('editAltPhone').value = altPhone;
  document.getElementById('editLandmark').value = landmark;
  document.getElementById('editCity').value = city;
  document.getElementById('editState').value = state;
  document.getElementById('editPincode').value = pincode;

  const editModal = new bootstrap.Modal(document.getElementById('editAddressModal'));
  editModal.show();
}

// const deleteLinks = document.querySelectorAll('a[href^="/deleteAddress"]');
// deleteLinks.forEach(link => {
//     link.addEventListener('click', function(e) {
//         e.preventDefault();
//         if (confirm('Are you sure you want to delete this address?')) {
//             window.location.href = this.getAttribute('href');
//         }
//     });
// });
  </script>
</body>
</html>