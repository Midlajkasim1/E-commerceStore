<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" href="images/store-logo.png"> 
    <title>My Orders</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        /* Reuse styles from profile page */
        .breadcrumb a {
        color: #088178;
        text-decoration: none;
    }

    .breadcrumb span {
        margin: 0 10px;
        color: #666;
    }

    .orders-card {
        background: #ffffff;
        border-radius: 12px;
        box-shadow: 0 2px 15px rgba(0, 0, 0, 0.08);
        padding: 30px;
        margin-bottom: 30px;
    }

    .order-item {
        border: 1px solid #e9ecef;
        border-radius: 8px;
        padding: 20px;
        margin-bottom: 20px;
        transition: all 0.3s ease;
    }

    .order-item:hover {
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        transform: translateY(-5px);
    }

    .order-status {
        font-weight: 500;
        border-radius: 20px;
        padding: 5px 12px;
        font-size: 0.8rem;
    }

    .order-status.delivered {
        background-color: #d4edda;
        color: #28a745;
    }

    .order-status.pending {
        background-color: #fff3cd;
        color: #ffc107;
    }

    .order-status.cancelled {
        background-color: #f8d7da;
        color: #dc3545;
    }

    .logout-link {
        color: #dc3545;
    }

    .logout-link:hover {
        background-color: #fff5f5;
        color: #dc3545;
    }

    /* Responsive adjustments */
    @media (max-width: 991px) {
        .sidebar {
            position: static;
            margin-bottom: 30px;
        }
    }

    .tracking-timeline {
        position: relative;
        padding-left: 50px;
    }

    .tracking-timeline::before {
        content: '';
        position: absolute;
        left: 0;
        top: 0;
        width: 2px;
        height: 100%;
        background-color: #e9ecef;
    }

    .tracking-item {
        position: relative;
        padding-bottom: 20px;
    }

    .tracking-item::before {
        content: '';
        position: absolute;
        left: -54px;
        top: 0;
        width: 16px;
        height: 16px;
        border-radius: 50%;
        background-color: #888;
    }

    .tracking-item.completed::before {
        background-color: #28a745;
    }

    .tracking-item.pending::before {
        background-color: #ffc107;
    }

    .order-status-badge {
        font-weight: 500;
        border-radius: 20px;
        padding: 5px 12px;
        font-size: 0.8rem;
    }

    /* Align product list, price, and status/details button */
    .order-item .row {
        display: flex;
        align-items: center;
        flex-wrap: wrap;
    }

    .order-item .col-md-8,
    .order-item .col-md-2,
    .order-item .col-md-2:last-child {
        display: flex;
        align-items: center;
    }

    .order-item .col-md-8 {
        flex: 1 1 60%;
        max-width: 60%;
    }

    .order-item .col-md-2 {
        flex: 1 1 20%;
        max-width: 20%;
    }

    .order-item .col-md-2:last-child {
        justify-content: flex-end;
    }

    .order-item .product-item {
        display: flex;
        align-items: center;
        gap: 10px;
        flex: 1 1 100%;
    }

    .order-item .product-item img {
        width: 80px;
        height: 80px;
        object-fit: cover;
        border-radius: 8px;
    }

    .order-item .product-item h6 {
        margin: 0;
        font-size: 0.9rem;
    }

    .order-item .product-item p {
        margin: 0;
        font-size: 0.8rem;
        color: #666;
    }

    .order-item .order-status {
        margin-right: 10px;
    }

    .order-item .btn {
        white-space: nowrap;
    }

    @media (max-width: 767px) {
        .order-item .col-md-8,
        .order-item .col-md-2,
        .order-item .col-md-2:last-child {
            flex: 0 0 100%;
            max-width: 100%;
            justify-content: flex-start;
            margin-bottom: 10px;
        }

        .order-item .col-md-2:last-child {
            justify-content: flex-start;
        }

        .order-item .product-item {
            flex: 1 1 100%;
        }
    }

    /* Add new status style for failed payments */
    .order-status.payment-failed {
        background-color: #f8d7da;
        color: #dc3545;
    }
    
    .order-status.payment-pending {
        background-color: #fff3cd;
        color: #856404;
    }
    
    /* Update existing status styles */
    .order-status {
        font-weight: 500;
        border-radius: 20px;
        padding: 5px 12px;
        font-size: 0.8rem;
    }
    .order-item .col-md-2.payment-failed-container {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 10px; /* Add space between the status badge and the button */
}

.order-status.payment-failed {
    background-color: #f8d7da;
    color: #dc3545;
}
.order-item .col-md-2.payment-failed-container {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 10px; /* Add space between the status badge and the button */
}

.order-status.payment-failed {
    background-color: #f8d7da;
    color: #dc3545;
}

/* Status badge styling */
.order-status {
    display: inline-block;
    padding: 5px 5px;
    border-radius: 20px;
    font-size: 0.8rem;
    font-weight: 500;
    white-space: nowrap; /* Prevent status text from wrapping */
}

/* Continue Payment button styling */

.btn-continue-payment {
    padding: 6px 8px; /* Adjust padding to make the button smaller */
    font-size: 0.75rem;
    
}
.btn-continue-payment {
    padding: 6px 8px; /* Adjust padding to make the button smaller */
    font-size: 0.75rem;
    
}
.pagination {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 2rem;
    gap: 0.5rem;
}

.pagination .page-item {
    list-style: none;
}

.pagination .page-link {
    padding: 0.5rem 1rem;
    border: 1px solid #dee2e6;
    color: #088178;
    background-color: #fff;
    border-radius: 4px;
    text-decoration: none;
    transition: all 0.3s ease;
}

.pagination .page-link:hover {
    background-color: #e9ecef;
    color: #088178;
}

.pagination .page-item.active .page-link {
    background-color: #088178;
    color: #fff;
    border-color: #088178;
}

.pagination .page-item.disabled .page-link {
    color: #6c757d;
    pointer-events: none;
    background-color: #fff;
    border-color: #dee2e6;
}
</style>
    </style>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">
</head>
<body>
    <%- include("../../views/partials/user/header") %>

    <div class="container my-4">
        <!-- Breadcrumb -->
        <div class="breadcrumb">
            <a href="/">Home</a>
            <span>/</span>
            <a href="/orders">My Orders</a>
        </div>

        <div class="row mt-4">
            <!-- Sidebar -->
            <%- include("../../views/partials/user/profileSidebar") %>

            <!-- Orders Content -->
            <div class="col-lg-9">
                <div class="orders-card">
                    <h4 class="mb-4">My Orders</h4>

                    <% if (orders && orders.length > 0) { %>
                        <% orders.forEach(function(order) { %>
                            <div class="card mb-3 order-item">
                                <div class="card-body">
                                    <div class="row">
                                        <!-- Product List -->
                                        <div class="col-md-8">
                                            <div class="product-list">
                                                <% order.orderedItems.slice(0, 2).forEach(function(item) { %>
                                                    <div class="product-item">
                                                        <img 
                                                            src="/uploads/re-image/<%= item.product.productImage[0] %>" 
                                                            alt="<%= item.product.name %>" 
                                                            class="img-thumbnail"
                                                        >
                                                        <div>
                                                            <h6><%= item.product.productName %></h6>
                                                            <p>Qty: <%= item.quantity %> | Size: <%= item.size %></p>
                                                        </div>
                                                    </div>
                                                <% }); %>
                                                <% if (order.orderedItems.length > 2) { %>
                                                    <div class="product-item">
                                                        <p class="text-muted">+<%= order.orderedItems.length - 2 %> more</p>
                                                    </div>
                                                <% } %>
                                            </div>
                                        </div>

                                        <!-- Price -->
                                        <div class="col-md-2">
                                            <p class="fw-bold">â‚¹<%= order.finalAmount %></p>
                                        </div>

                                        <!-- Order Status and Details Button -->
                                        <div class="col-md-2 d-flex align-items-center justify-content-end ">
                                            <span class="order-status <%= order.status.toLowerCase().replace(' ', '-') %>">
                                                <%= order.status %>
                                            </span>
                                            <% if (order.status === 'failed') { %>
                                                <button
                                                    class="btn btn-outline-primary btn-sm btn-continue-payment"
                                                    onclick="retryPayment('<%= order.orderId %>', '<%= order.finalAmount %>')">
                                                    Continue Payment
                                                </button>
                                            <% } else { %>
                                                <a href="/details/<%= order._id %>" class="btn btn-outline-primary btn-sm ms-2">
                                                    Details
                                                </a>
                                            <% } %>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                           <!-- Pagination -->
                          <!-- Pagination -->
<% if (totalPages > 1) { %>
    <nav aria-label="Page navigation">
        <ul class="pagination">
            <!-- Previous button -->
            <li class="page-item <%= !hasPrevPage ? 'disabled' : '' %>">
                <a class="page-link" href="<%= hasPrevPage ? '/profile/order?page=' + prevPage : '#' %>" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
            
            <!-- Page numbers -->
            <% for (let i = 1; i <= totalPages; i++) { %>
                <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                    <a class="page-link" href="/profile/order?page=<%= i %>"><%= i %></a>
                </li>
            <% } %>
            
            <!-- Next button -->
            <li class="page-item <%= !hasNextPage ? 'disabled' : '' %>">
                <a class="page-link" href="<%= hasNextPage ? '/profile/order?page=' + nextPage : '#' %>" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>
<% } %>
                    <% } else { %>
                        <div class="alert alert-info">
                            You have no orders yet.
                        </div>
                    <% } %>
                    
                </div>
            </div>
        </div>
    </div>

    <%- include("../../views/partials/user/footer") %>
    <!-- SweetAlert2 CSS -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

    <script>
     // Client-side JavaScript
     async function retryPayment(orderId, amount) {
    try {
        // Initial Swal loading state
        Swal.fire({
            title: 'Processing...',
            text: 'Please wait while we initialize your payment',
            allowOutsideClick: false,
            showConfirmButton: false,
            willOpen: () => {
                Swal.showLoading();
            }
        });

        // Initialize payment
        const response = await fetch('/retry-payment', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                orderId: orderId,
                totalAmount: parseFloat(amount)
            })
        });

        const data = await response.json();
        
        Swal.close();

        if (!data.success) {
            throw new Error(data.message || 'Failed to initialize payment');
        }

        const options = {
            key: data.key,
            amount: data.amount,
            currency: 'INR',
            order_id: data.razorpayOrderId,
            name: 'Urban Row',
            description: 'Retry Payment for Order #' + orderId,
            handler: async function(response) {
                try {
                    Swal.fire({
                        title: 'Verifying Payment...',
                        text: 'Please wait while we confirm your payment',
                        allowOutsideClick: false,
                        showConfirmButton: false,
                        willOpen: () => {
                            Swal.showLoading();
                        }
                    });

                    const verifyResponse = await fetch('/verify-retry-payment', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            razorpay_payment_id: response.razorpay_payment_id,
                            razorpay_order_id: response.razorpay_order_id,
                            razorpay_signature: response.razorpay_signature,
                            orderId: orderId,
                            amount: amount
                        })
                    });

                    const verifyData = await verifyResponse.json();

                    if (!verifyData.success) {
                        throw new Error(verifyData.message || 'Payment verification failed');
                    }

                    await Swal.fire({
                        icon: 'success',
                        title: 'Payment Successful!',
                        text: 'Your order has been confirmed.',
                        confirmButtonColor: '#8B5CF6'
                    });

                    window.location.href = '/profile/order';
                } catch (error) {
                    console.error('Verification error:', error);
                    await Swal.fire({
                        icon: 'error',
                        title: 'Verification Failed',
                        text: error.message || 'Unable to verify payment',
                        confirmButtonColor: '#8B5CF6'
                    });
                }
            },
            modal: {
                ondismiss: function() {
                    Swal.fire({
                        icon: 'info',
                        title: 'Payment Cancelled',
                        text: 'You cancelled the payment process.',
                        confirmButtonColor: '#8B5CF6'
                    });
                }
            },
            theme: {
                color: '#8B5CF6'
            }
        };

        const rzp = new Razorpay(options);
        
        rzp.on('payment.failed', function(response) {
            Swal.fire({
                icon: 'error',
                title: 'Payment Failed',
                text: response.error.description || 'The payment process was unsuccessful. Please try again.',
                confirmButtonColor: '#8B5CF6'
            });
        });

        rzp.open();

    } catch (error) {
        console.error('Payment error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: error.message || 'An error occurred while processing your request.',
            confirmButtonColor: '#8B5CF6'
        });
    }
}



   </script>
</body>
</html>